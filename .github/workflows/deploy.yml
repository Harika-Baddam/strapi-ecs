name: Deploy Strapi to ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      ECR_REPOSITORY: strapi-app
      ECS_CLUSTER: strapi-cluster
      ECS_SERVICE: strapi-service
      TASK_DEFINITION: strapi-task-def.json
      EXECUTION_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/strapi-app
      run: |
          docker build -t $IMAGE_NAME:v4 .
          docker push $IMAGE_NAME:v4
          echo "IMAGE_URL=$IMAGE_NAME:v4" >> $GITHUB_ENV

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0
    - name: Terraform Init
      run: terraform init
    - name: Terraform Plan
      run: terraform plan -var="image=baddamharika/strapi-app:latest"

    - name: Terraform Apply
      run: terraform apply -auto-approve -var="image=baddamharika/strapi-app:latest"

    - name: Register updated ECS task definition
      run: |
        aws ecs register-task-definition \
          --cli-input-json file://${{ ecs.TASK_DEFINITION }} \
          --execution-role-arn ${{ ecs.EXECUTION_ROLE_ARN }}

    - name: Deploy to ECS service
      run: |
        aws ecs update-service \
          --cluster strpi-cluster-hrk \
          --service strapi-service \
          --force-new-deployment
